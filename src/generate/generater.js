// src/generate/generator.js
import { dirname, relative } from 'path';
import { writeFileSync } from 'fs';

export function generateHandlersFile(mockFiles, outputFile) {
  const imports = mockFiles.map((file) => {
    const relativePath = relative(dirname(outputFile), file.path)
      .replace(/\\/g, '/')
      .replace('.ts', '');

    return `import { ${file.functionNames.join(
      ', '
    )} } from '${relativePath}';`;
  });

  const allMockFunctions = mockFiles.flatMap((file) => file.functionNames);

  const content = `/**
 * Auto-generated file. Do not edit manually.
 * Generated at: ${new Date().toISOString()}
 * 
 * Total mock functions: ${allMockFunctions.length}
 * 
 * Generated by @cydev/msw-openapi-helper
 */

${imports.join('\n')}

export const handlers = [
${allMockFunctions.map((fn) => `  ...${fn}(),`).join('\n')}
];
`;

  writeFileSync(outputFile, content, 'utf-8');

  return {
    totalHandlers: allMockFunctions.length,
    totalFiles: mockFiles.length,
  };
}
